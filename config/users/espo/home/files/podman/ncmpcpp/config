# See: http://git.musicpd.org/cgit/mirror/ncmpcpp.git/tree/doc/config

##############################################################################
# This is the example configuration file. Copy it to $HOME/.ncmpcpp/config ##
## or $XDG_CONFIG_HOME/ncmpcpp/config and set up your preferences.          ##
##############################################################################

##### directories ######

## Directory for storing ncmpcpp related files.  Changing it is useful if you
## want to store everything somewhere else and provide command line setting for
## alternative location to config file which defines that while launching
## ncmpcpp.
##
#
#ncmpcpp_directory = ~/.ncmpcpp
#
##
## Directory for storing downloaded lyrics. It defaults to ~/.lyrics since other
## MPD clients (eg. ncmpc) also use that location.
##
#
lyrics_directory = ~/.lyrics

##### connection settings #####

mpd_host = localhost
#
mpd_port = 6600
#
#mpd_connection_timeout = 5
#
## Needed for tag editor and file operations to work.
##
mpd_music_dir = ~/music
#
#mpd_crossfade_time = 5
#
##### music visualizer #####
##
## Note: In order to make music visualizer work you'll need to use mpd fifo
## output, whose format parameter has to be set to 44100:16:1 for mono
## visualization or 44100:16:2 for stereo visualization. Example configuration
## (it has to be put into mpd.conf):
##
## audio_output {
##        type            "fifo"
##        name            "Visualizer feed"
##        path            "/tmp/mpd.fifo"
##        format          "44100:16:2"
## }
##
#
#visualizer_fifo_path = "/tmp/mpd.fifo"
#
##
## Note: Below parameter is needed for ncmpcpp to determine which output
## provides data for visualizer and thus allow syncing between visualization and
## sound as currently there are some problems with it.
##
#
#visualizer_output_name = "my_fifo"
#
##
## If you set format to 44100:16:2, make it 'yes'.
##
#visualizer_in_stereo = "yes"
#
##
## Note: Below parameter defines how often ncmpcpp has to "synchronize"
## visualizer and audio outputs.  30 seconds is optimal value, but if you
## experience synchronization problems, set it to lower value.  Keep in mind
## that sane values start with >=10.
##
#
#visualizer_sync_interval = "30" 
#
##
## Note: To enable spectrum frequency visualization you need to compile ncmpcpp
## with fftw3 support.
##
#
## Available values: spectrum, wave, wave_filled, ellipse.
##
#visualizer_type = "wave_filled"
#visualizer_type = wave
#
#visualizer_look = ●▮
#
#visualizer_color = blue, green
#
## Alternative subset of 256 colors for terminals that support it.
##
#visualizer_color = 41, 83, 119, 155, 185, 215, 209, 203, 197, 161
#
##### system encoding #####
##
## ncmpcpp should detect your charset encoding but if it failed to do so, you
## can specify charset encoding you are using here.
##
## Note: You can see whether your ncmpcpp build supports charset detection by
## checking output of `ncmpcpp --version`.
##
## Note: Since MPD uses UTF-8 by default, setting this option makes sense only
## if your encoding is different.
##
#
#system_encoding = ""
#
##### delays #####
#
## Time of inactivity (in seconds) after playlist highlighting will be disabled
## (0 = always on).
##
playlist_disable_highlight_delay = 4
#
## Defines how long messages are supposed to be visible.
##
message_delay_time = 2
#
##### song format #####
##
## For a song format you can use:
##
## %l - length
## %f - filename
## %D - directory
## %a - artist
## %A - album artist
## %t - title
## %b - album
## %y - date
## %n - track number (01/12 -> 01)
## %N - full track info (01/12 -> 01/12)
## %g - genre
## %c - composer
## %p - performer
## %d - disc
## %C - comment
## %P - priority
## $R - begin right alignment
##
## If you want to make sure that a part of the format is displayed only when
## certain tags are present, you can archieve it by grouping them with brackets,
## e.g. '{%a - %t}' will be evaluated to 'ARTIST - TITLE' if both tags are
## present or '' otherwise.  It is also possible to define a list of
## alternatives by providing several groups and separating them with '|',
## e.g. '{%t}|{%f}' will be evaluated to 'TITLE' or 'FILENAME' if the former is
## not present.
##
## Note: If you want to set limit on maximal length of a tag, just put the
## appropriate number between % and character that defines tag type, e.g. to
## make album take max. 20 terminal cells, use '%20b'.
##
## In addition, formats support markers used for text attributes.  They are
## followed by character '$'. After that you can put:
##
## - 0 - default window color (discards all other colors)
## - 1 - black
## - 2 - red
## - 3 - green
## - 4 - yellow
## - 5 - blue
## - 6 - magenta
## - 7 - cyan
## - 8 - white
## - 9 - end of current color
## - b - bold text
## - u - underline text
## - r - reverse colors
## - a - use alternative character set
##
## If you don't want to use a non-color attribute anymore, just put it again,
## but this time insert character '/' between '$' and attribute character,
## e.g. {$b%t$/b}|{$r%f$/r} will display bolded title tag or filename with
## reversed colors.
##
## If you want to use 256 colors and/or background colors in formats (the naming
## scheme is described below in section about color definitions), it can be done
## with the syntax $(COLOR), e.g. to set the artist tag to one of the
## non-standard colors and make it have yellow background, you need to write
## $(197_yellow)%a$(end). Note that for standard colors this is interchangable
## with attributes listed above.
##
## Note: colors can be nested.
##
#
#song_list_format = "{$7%a ⠂ }{$6%t}$R{$1%l$8}"
song_list_format = {$5%30t$9 by }{$7%40a$9 from }{$13%30b$9 }
song_status_format = {$5$b%t$/b$9 $8by$9 $7$b%a$/b$9}
#
#song_status_format = {{%a{ "%b"{ (%y)}} - }{%t}}|{%f}
#
#song_library_format = {%n - }{%t}|{%f}
#alternative_ui_separator_color = 11#
#alternative_header_first_line_format = $b$1$aqqu$/a$9 {%t}|{%f} $1$atqq$/a$9$/b
#current_item_prefix = $(blue)$r
#
#current_item_suffix = $/r$(end)
#
#current_item_inactive_column_prefix = $(cyan)$r
#
#current_item_inactive_column_suffix = $/r$(end)
#
now_playing_prefix = $b
now_playing_suffix = $/b

browser_playlist_prefix = "$7playlist$9 "
song_columns_list_format = "(50)[7]{ar} (50)[5]{t}"
playlist_display_mode = columns
browser_display_mode = columns
search_engine_display_mode = columns
volume_change_step = 5
autocenter_mode = yes
centered_cursor = yes
progressbar_look = "━━━"
user_interface = classic
header_visibility = no
statusbar_visibility = yes
titles_visibility = no
cyclic_scrolling = yes
allow_for_physical_item_deletion = no
startup_screen = playlist

mouse_support = no
external_editor = nvim
use_console_editor = yes
colors_enabled = yes
empty_tag_color = blue
header_window_color = blue
volume_color = black
state_line_color = 16
state_flags_color = white
main_window_color = white
color1 = blue
color2 = cyan
progressbar_color = 1
progressbar_elapsed_color = 16
#statusbar_color = red
#statusbar_time_color = 8
#player_state_color = white
alternative_ui_separator_color = green
window_border_color = black
active_window_border = blue

visualizer_fifo_path = "/tmp/mpd.fifo"
visualizer_output_name = "my_fife"
visualizer_sync_interval = "30"
visualizer_in_stereo = "yes"
visualizer_type = "wave"
#visualizer_type = "spectrum"
visualizer_look = "+|"
#visualizer_look = "◆│"  # “diamond character” and “box-drawing character”
#visualizer_color = "blue"
